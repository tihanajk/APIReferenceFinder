using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace MyTool
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "My First Tool"),
        ExportMetadata("Description", "This is my tool"),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", "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"),
        ExportMetadata("BackgroundColor", "Lavender"),
        ExportMetadata("PrimaryFontColor", "Black"),
        ExportMetadata("SecondaryFontColor", "Gray")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;
        }
    }
}